#textdomain wesnoth-To_Lands_Unknown
#define FAKE_SCENERY_ANIM IMAGE FRAMES X Y TIME
{VARIABLE animcounter 1}
[while]
    [variable]
    name=animcounter
    less_than_equal_to={FRAMES}
    [/variable]
    [do]
	[item]
        x={X}
        y={Y}
        halo={IMAGE}-($animcounter).png
    [/item]
    
    [delay]
        time={TIME}
    [/delay]
    
    {REMOVE_IMAGE {X} {Y}}
{NEXT animcounter}
#enddef

#define RESTORE_SCENERY_ANIM IMAGE START FRAMES X Y TIME
{VARIABLE animcounter {START}}
[while]
    [variable]
    name=animcounter
    less_than_equal_to={FRAMES}
    [/variable]
    [do]
	[item]
        x={X}
        y={Y}
        halo={IMAGE}-($animcounter).png
    [/item]
    
    [delay]
        time={TIME}
    [/delay]
    
    {REMOVE_IMAGE {X} {Y}}
{NEXT animcounter}
#enddef

#define REVERSE_SCENERY_ANIM IMAGE FRAMES X Y TIME
{VARIABLE animcounter {FRAMES}}
[while]
    [variable]
    name=animcounter
    greater_than_equal_to=1
    [/variable]
    [do]
	[item]
        x={X}
        y={Y}
        halo={IMAGE}-($animcounter).png
    [/item]
    
    [delay]
        time={TIME}
    [/delay]
    
    {REMOVE_IMAGE {X} {Y}}
{VARIABLE_OP animcounter add -1}
[/do]
[/while]
#enddef

#define FAKE_SCENERY_HOLD IMAGE X Y TIME
	[item]
        x={X}
        y={Y}
        halo={IMAGE}
    [/item]
    
    [delay]
        time={TIME}
    [/delay]
    
    {REMOVE_IMAGE {X} {Y}}
#enddef

#define PLACE_HALO IMAGE X Y
[item]
    x={X}
    y={Y}
    halo={IMAGE}
[/item]
#enddef

#define COLLAR_EVENT
[event]
    name=die
    first_time_only=no
    [filter]
        [filter_wml]
            [status]
                collar=yes
            [/status]
        [/filter_wml]
    [/filter]
    [if]
    [variable]
        name=unit.status.firstrecall
        equals=yes
    [/variable]
    [then]
    {VARIABLE unit.status.firstrecall no}
    {RECALL_ACTION}
[/then]
[else]
    [if]
    [variable]
        name=unit.status.secondrecall
        equals=yes
    [/variable]
    [then]
        {VARIABLE unit.status.secondrecall no}
        {RECALL_ACTION}
    [/then]   
    [else]
        [if]
        [variable]
            name=unit.status.thirdrecall
            equals=yes
        [/variable]
        [then]
        {VARIABLE unit.status.thirdrecall no}
        {RECALL_ACTION}
        [/then]
        [else]
        [/else]
        [/if]
    [/else]
    [/if] 
[/else]
[/if]
[/event]
#enddef

#define RECALL_ACTION
[store_unit]
        [filter]
            canrecruit=yes
            side=$unit.side
        [/filter]
        variable=summonerleader
    [/store_unit]
    [unstore_unit]
        variable=unit
        x,y=$summonerleader.x,$summonerleader.y
        find_vacant=yes
        text= _ "Recalled..."
        {COLOR_HEAL}
    [/unstore_unit]
    {CLEAR_VARIABLE summonerleader}
    {FULL_HEAL (
[not]
    x,y=$x1,$y1
[/not]
[filter_wml]
    [status]
        collar=yes
    [/status]
[/filter_wml]
)}
#enddef

#define ABILITY_AMULET_METAMORPH
	[dummy]
		id=metamorph
		name= _ "Metamorph"
		description= _ "Metamorph:
this elemental can turn into an other type of elemental."
	[/dummy]
[/abilities]

[event]
	name=start
	[if]
		[have_unit]
			ability=metamorph
		[/have_unit]
		[then]
		{METAMORPH_FIRE 1 fire}
        {METAMORPH_FIRE 2 water}
        {METAMORPH_FIRE 3 air}
        {METAMORPH_FIRE 4 earth}
		[/then]
	[/if]
[/event]

[event]
	name=recall
	[filter]
		ability=metamorph
	[/filter]
	    {METAMORPH_FIRE 1 fire}
        {METAMORPH_FIRE 2 water}
        {METAMORPH_FIRE 3 air}
        {METAMORPH_FIRE 4 earth}
[/event]

[event]
	name=post_advance
	[filter]
		ability=metamorph
	[/filter]
	    {METAMORPH_FIRE 1 fire}
        {METAMORPH_FIRE 2 water}
        {METAMORPH_FIRE 3 air}
        {METAMORPH_FIRE 4 earth}
[/event]
[+abilities]
#enddef

#define METAMORPH_FIRE ID ELEM
[set_menu_item]
    id=metamorph_{ID}
	description= _ "Turn into {ELEM}"
	[show_if]
	[/show_if]
	
	[filter_location]
	   [filter]
	       [filter_wml]
	           [status]
	               amulet_elem=yes
	           [/status]
	       [/filter_wml]
	       [not]
	       [filter_wml]
	           moves=0
	       [/filter_wml]
	       [/not]
	   [/filter]
	[/filter_location]
	
	[command]
	   [if]
	   [have_unit]
	       type=I8 Ak_Elemental_water,I8 Ak_Elemental_fire,I8 Ak_Elemental_air,I8 Ak_Elemental_earth
	       x,y=$x1,$y1
	   [/have_unit]
	   [then]
	       {TRANSFORM_UNIT x,y=$x1,$y1 (I8 Ak_Elemental_{ELEM})}
	   [/then]
	   [else]
	       [if]
	       [have_unit]
	           type=I8 Ak_Avatar_water,I8 Ak_Avatar_fire,I8 Ak_Avatar_air,I8 Ak_Avatar_earth
	           x,y=$x1,$y1
	       [/have_unit]
	       [then]
	           {TRANSFORM_UNIT x,y=$x1,$y1 (I8 Ak_Avatar_{ELEM})}
	       [/then]
	       [else]
	           {TRANSFORM_UNIT x,y=$x1,$y1 (I8 Ak_God_{ELEM})}
	       [/else]
	       [/if]
	   [/else]
	   [/if]
	   [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=modified
        [/store_unit]
        {VARIABLE modified.moves 0}

        [unstore_unit]
            variable=modified
            find_vacant=no
        [/unstore_unit]
	[/command]
[/set_menu_item]
#enddef

#define SUMMONER_LOCK
[event]
    name=recall
    first_time_only=no
    [filter]
        type=I8 Ak_SummonerII
    [/filter]
    {VARIABLE unit.advances_to (I8 Ak_SummonerIII_lock,I8 Ak_Masterofbalance,I8 Ak_SummonerHeavy)}
    [unstore_unit]
        variable=unit
        find_vacant=no
    [/unstore_unit]
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
        type=I8 Ak_SummonerII
    [/filter]
    {VARIABLE unit.advances_to (I8 Ak_SummonerIII_lock,I8 Ak_Masterofbalance,I8 Ak_SummonerHeavy)}
    [unstore_unit]
        variable=unit
        find_vacant=no
    [/unstore_unit]
[/event]
#enddef


#define RASHTI_TRANSFORMATIONS
[event]
    name=die
    first_time_only=no
    [filter]
        type=I8 Ak_TrueRashti
    [/filter]
    
    {ADVANCE_UNIT (type=I8 Ak_TrueRashti) "I8 Ak_Rashti2"}
[/event]

[event]
    name=last breath
    first_time_only=no
    [filter]
        type=I8 Ak_Rashti2
    [/filter]
    
    {ADVANCE_UNIT (type=I8 Ak_Rashti2) "I8 Ak_HoRashti2"}
    {UNIT 1 (I8 Ak_DharmaRashti2) ($x1) ($y1) (id=Dharma)}
[/event]

#recreate Rashti event
[event]
    name=post advance
    first_time_only=no
    [filter]
        type=I8 Ak_Rashti2
    [/filter]
    
    [kill]
        type=I8 Ak_HoRashti2,I8 Ak_DharmaRashti2
        animate=no
        fire_event=no
    [/kill]
[/event]

#sharing damage
#HoRashti
[event]
    name=attacker hits
    first_time_only=no
    
    [filter]
        side=2
    [/filter]
    [filter_second]
        type=I8 Ak_HoRashti2
    [/filter_second]
    
    {VARIABLE sharedmg $damage_inflicted}
    {VARIABLE_OP sharedmg divide 2}
    
    {VARIABLE_OP second_unit.hitpoints add $sharedmg}
    [if]
    [variable]
        name=second_unit.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_HoRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text="$sharedmg"
        {COLOR_HEAL}
    [/unstore_unit]
    [/else]
    [/if]
    [store_unit]
        [filter]
            type=I8 Ak_DharmaRashti2
        [/filter]
        variable=dharma
    [/store_unit]
    {VARIABLE_OP dharma.hitpoints sub $sharedmg}
    [if]
    [variable]
        name=dharma.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_DharmaRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
        [unstore_unit]
            variable=dharma
            find_vacant=no
            text="$sharedmg"
            {COLOR_HARM}
        [/unstore_unit]
    [/else]
    [/if]
[/event]

##

[event]
    name=defender hits
    first_time_only=no
    
    [filter]
        side=2
    [/filter]
    [filter_second]
        type=I8 Ak_HoRashti2
    [/filter_second]
    
    {VARIABLE sharedmg $damage_inflicted}
    {VARIABLE_OP sharedmg divide 2}
    
    {VARIABLE_OP second_unit.hitpoints add $sharedmg}
    [if]
    [variable]
        name=second_unit.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_HoRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text="$sharedmg"
        {COLOR_HEAL}
    [/unstore_unit]
    [/else]
    [/if]
    [store_unit]
        [filter]
            type=I8 Ak_DharmaRashti2
        [/filter]
        variable=dharma
    [/store_unit]
    {VARIABLE_OP dharma.hitpoints sub $sharedmg}
    [if]
    [variable]
        name=dharma.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_DharmaRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
        [unstore_unit]
            variable=dharma
            find_vacant=no
            text="$sharedmg"
            {COLOR_HARM}
        [/unstore_unit]
    [/else]
    [/if]
[/event]

#DharmaRashti
[event]
    name=attacker hits
    first_time_only=no
    
    [filter]
        side=2
    [/filter]
    [filter_second]
        type=I8 Ak_DharmaRashti2
    [/filter_second]
    
    {VARIABLE sharedmg $damage_inflicted}
    {VARIABLE_OP sharedmg divide 2}
    
    {VARIABLE_OP second_unit.hitpoints add $sharedmg}
    [if]
    [variable]
        name=second_unit.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_DharmaRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text="$sharedmg"
        {COLOR_HEAL}
    [/unstore_unit]
    [/else]
    [/if]
    [store_unit]
        [filter]
            type=I8 Ak_HoRashti2
        [/filter]
        variable=ho
    [/store_unit]
    {VARIABLE_OP ho.hitpoints sub $sharedmg}
    [if]
    [variable]
        name=ho.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_HoRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
        [unstore_unit]
            variable=ho
            find_vacant=no
            text="$sharedmg"
            {COLOR_HARM}
        [/unstore_unit]
    [/else]
    [/if]
[/event]

##

[event]
    name=defender hits
    first_time_only=no
    
    [filter]
        side=2
    [/filter]
    [filter_second]
        type=I8 Ak_DharmaRashti2
    [/filter_second]
    
    {VARIABLE sharedmg $damage_inflicted}
    {VARIABLE_OP sharedmg divide 2}
    
    {VARIABLE_OP second_unit.hitpoints add $sharedmg}
    [if]
    [variable]
        name=second_unit.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_DharmaRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text="$sharedmg"
        {COLOR_HEAL}
    [/unstore_unit]
    [/else]
    [/if]
    [store_unit]
        [filter]
            type=I8 Ak_HoRashti2
        [/filter]
        variable=ho
    [/store_unit]
    {VARIABLE_OP ho.hitpoints sub $sharedmg}
    [if]
    [variable]
        name=ho.hitpoints
        less_than_equal_to=0
    [/variable]
    [then]
        [kill]
            type=I8 Ak_HoRashti2
            fire_event=yes
        [/kill]
    [/then]
    [else]
        [unstore_unit]
            variable=ho
            find_vacant=no
            text="$sharedmg"
            {COLOR_HARM}
        [/unstore_unit]
    [/else]
    [/if]
[/event]

[event]
    name=die
    [filter]
        type=I8 Ak_HoRashti2,I8 Ak_DharmaRashti2
    [/filter]
    
    [endlevel]
        result=defeat
    [/endlevel]
[/event]
#enddef
